{
   "_id": "_design/gbif-occurrence",
   "_rev": "10-5133e162209c5cdabf1f94c9a18a6835",
   "language": "javascript",
   "views": {
       "nt": {
           "map": "/*\n\nShared code\n\n\n*/\n//----------------------------------------------------------------------------------------\n// Store a triple with optional language code\nfunction triple(subject, predicate, object, language) {\n  var triple = [];\n  triple[0] = subject;\n  triple[1] = predicate;\n  triple[2] = object;\n\n  if (typeof language === 'undefined') {} else {\n    triple[3] = language;\n  }\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Store a quad (not used at present)\nfunction quad(subject, predicate, object, context) {\n  var triple = [];\n  triple[0] = $subject;\n  triple[1] = $predicate;\n  triple[2] = $object;\n  triple[3] = $context;\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Enclose triple in suitable wrapping for HTML display or triplet output\nfunction wrap(s, html) {\n  if (s.match(/^(http|urn|_:)/)) {\n    if (html) {\n      s = '&lt;' + s + '&gt;';\n    } else {\n      s = '<' + s + '>';\n    }\n  } else {\n    s = '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n  }\n  return s;\n}\n\n//----------------------------------------------------------------------------------------\n// https://css-tricks.com/snippets/javascript/htmlentities-for-javascript/\nfunction htmlEntities(str) {\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n//----------------------------------------------------------------------------------------\nfunction output(doc, triples) {\n    // CouchDB\n    for (var i in triples) {\n      var s = 0;\n      var p = 1;\n      var o = 2;\n\n      var lang = 3;\n\n      var nquads = wrap(triples[i][s], false) \n\t    \t+ ' ' + wrap(triples[i][p], false) \n\t    \t+ ' ' + wrap(triples[i][o], false);\n\t    if (triples[i][lang]) {\n\t    \tnquads += '@' + triples[i][lang];\n\t    }\n\t    \t\n\t    nquads += ' .' + \"\\n\";\n\n\n      emit(doc._id, nquads);\n    }\n}\n\n// geohash.js\n// Geohash library for Javascript\n// (c) 2008 David Troy\n// Distributed under the MIT License\nBITS = [16, 8, 4, 2, 1];\n\nBASE32 = \"0123456789bcdefghjkmnpqrstuvwxyz\";\nNEIGHBORS = {\n  right: {\n    even: \"bc01fg45238967deuvhjyznpkmstqrwx\"\n  },\n  left: {\n    even: \"238967debc01fg45kmstqrwxuvhjyznp\"\n  },\n  top: {\n    even: \"p0r21436x8zb9dcf5h7kjnmqesgutwvy\"\n  },\n  bottom: {\n    even: \"14365h7k9dcfesgujnmqp0r2twvyx8zb\"\n  }\n};\nBORDERS = {\n  right: {\n    even: \"bcfguvyz\"\n  },\n  left: {\n    even: \"0145hjnp\"\n  },\n  top: {\n    even: \"prxz\"\n  },\n  bottom: {\n    even: \"028b\"\n  }\n};\n\nNEIGHBORS.bottom.odd = NEIGHBORS.left.even;\nNEIGHBORS.top.odd = NEIGHBORS.right.even;\nNEIGHBORS.left.odd = NEIGHBORS.bottom.even;\nNEIGHBORS.right.odd = NEIGHBORS.top.even;\n\nBORDERS.bottom.odd = BORDERS.left.even;\nBORDERS.top.odd = BORDERS.right.even;\nBORDERS.left.odd = BORDERS.bottom.even;\nBORDERS.right.odd = BORDERS.top.even;\n\nfunction refine_interval(interval, cd, mask) {\n  if (cd & mask)\n    interval[0] = (interval[0] + interval[1]) / 2;\n  else\n    interval[1] = (interval[0] + interval[1]) / 2;\n}\n\nfunction calculateAdjacent(srcHash, dir) {\n  srcHash = srcHash.toLowerCase();\n  var lastChr = srcHash.charAt(srcHash.length - 1);\n  var type = (srcHash.length % 2) ? 'odd' : 'even';\n  var base = srcHash.substring(0, srcHash.length - 1);\n  if (BORDERS[dir][type].indexOf(lastChr) != -1)\n    base = calculateAdjacent(base, dir);\n  return base + BASE32[NEIGHBORS[dir][type].indexOf(lastChr)];\n}\n\nfunction decodeGeoHash(geohash) {\n  var is_even = 1;\n  var lat = [];\n  var lon = [];\n  lat[0] = -90.0;\n  lat[1] = 90.0;\n  lon[0] = -180.0;\n  lon[1] = 180.0;\n  lat_err = 90.0;\n  lon_err = 180.0;\n\n  for (i = 0; i < geohash.length; i++) {\n    c = geohash[i];\n    cd = BASE32.indexOf(c);\n    for (j = 0; j < 5; j++) {\n      mask = BITS[j];\n      if (is_even) {\n        lon_err /= 2;\n        refine_interval(lon, cd, mask);\n      } else {\n        lat_err /= 2;\n        refine_interval(lat, cd, mask);\n      }\n      is_even = !is_even;\n    }\n  }\n  lat[2] = (lat[0] + lat[1]) / 2;\n  lon[2] = (lon[0] + lon[1]) / 2;\n\n  return {\n    latitude: lat,\n    longitude: lon\n  };\n}\n\nfunction encodeGeoHash(latitude, longitude) {\n  var is_even = 1;\n  var i = 0;\n  var lat = [];\n  var lon = [];\n  var bit = 0;\n  var ch = 0;\n  var precision = 12;\n  geohash = \"\";\n\n  lat[0] = -90.0;\n  lat[1] = 90.0;\n  lon[0] = -180.0;\n  lon[1] = 180.0;\n\n  while (geohash.length < precision) {\n    if (is_even) {\n      mid = (lon[0] + lon[1]) / 2;\n      if (longitude > mid) {\n        ch |= BITS[bit];\n        lon[0] = mid;\n      } else\n        lon[1] = mid;\n    } else {\n      mid = (lat[0] + lat[1]) / 2;\n      if (latitude > mid) {\n        ch |= BITS[bit];\n        lat[0] = mid;\n      } else\n        lat[1] = mid;\n    }\n\n    is_even = !is_even;\n    if (bit < 4)\n      bit++;\n    else {\n      geohash += BASE32[ch];\n      bit = 0;\n      ch = 0;\n    }\n  }\n  return geohash;\n}\n\n//----------------------\nfunction specimen_codes(doc) {\n  var codes = [];\n\n  // By default we simply output institutionCode and catalogNumber,\n  // but for some we need special processing. Setting output_default to false\n  // means that the simple institutionCode + catalogNumber\n  // doesn't apply.\n  var output_default = true;\n\n  // Here we do any special processing do create codes seen in the wild\n  switch (doc.datasetKey) {\n\n    // AMNH\n    // Birds\n    case '96c93a1e-f762-11e1-a439-00145eb45e9a':\n      var catalogNumber = doc.catalogNumber;\n      catalogNumber = catalogNumber.replace(/DOT-/i, '');\n      catalogNumber = catalogNumber.replace(/SKIN-/i, '');\n      codes.push(doc.institutionCode + ' ' + catalogNumber);\n      break;\n\n      // AM\n    case 'dce8feb0-6c89-11de-8225-b8a03c50a862':\n      var catalogNumber = doc.catalogNumber;\n      catalogNumber = catalogNumber.replace(/\\./, '');\n      codes.push(doc.institutionCode + ' ' + catalogNumber);\n      if (catalogNumber.match(/^R/)) {\n        codes.push(doc.institutionCode + catalogNumber);\n      }\n      codes.push('Australian Museum ' + catalogNumber);\n      output_default = false;\n      break;\n\n      // ANWC\n    case '0debafd0-6c8a-11de-8225-b8a03c50a862':\n      if (doc.catalogNumber.match(/^[A-Z]/)) {\n        codes.push(doc.institutionCode + ':' + doc.catalogNumber.replace(/^[A-Z][0]*/, ''));\n      }\n      break;\n\n      // CASIZ\n    case '44bcde48-ac71-46f2-bf73-24fc3c008b6c':\n      var catalogNumber = doc.catalogNumber.replace(/\\.0/, '');\n      codes.push(doc.institutionCode + ' ' + catalogNumber);\n      // CAS:CASIZ 175448 \n      codes.push(doc.institutionCode + ':CASIZ ' + catalogNumber);\n      output_default = false;\n      break;\n\n      // CAS herps\n    case 'cece4fc2-1fec-4bb5-a335-7252548e3f0b':\n      codes.push(doc.institutionCode + doc.catalogNumber);\n      codes.push(doc.institutionCode + ':Herp:' + doc.catalogNumber);\n      break;\n      // CAS Ichs\n        \n    case '5d6c10bd-ea31-4363-8b79-58c96d859f5b':\n          codes.push(doc.institutionCode + doc.catalogNumber);    \n      codes.push(doc.institutionCode + ':Ich:' + doc.catalogNumber);    \n      break;\n\n      // CSIRO\n      // CSIRO Ichthyology provider for OZCAM\n    case '18c93d12-34fb-4d3f-903c-b77215a1dcc9':\n      if (doc.catalogNumber.match(/^H/)) {\n        // BOLD cites them like this\n        codes.push(doc.institutionCode + ' H ' + doc.catalogNumber.replace(/^H/, ''));\n      }\n      break;\n\n      // FMNH\n    case 'e48d6c49-34a3-4df6-8206-121c061f190d':\n        codes.push(doc.institutionCode + ':HERP:' + doc.catalogNumber);\n      break;\n\n      // Kew\n    case 'cd6e21c8-9e8a-493a-8a76-fbf7862069e5':\n        codes.push(doc.catalogNumber);\n      output_default = false;\n      break;\n\n      // MHNG\n    case '5a659248-1f70-11e3-b2c5-00145eb45e9a':\n      if (doc.catalogNumber.match(/^MHNG-MAM-/)) {\n        var catalogNumber = doc.catalogNumber;\n        catalogNumber = catalogNumber.replace(/MHNG-MAM-/, '');  \n        codes.push(doc.institutionCode + ' ' + catalogNumber);\n\n        // for BOLD\n        catalogNumber = catalogNumber.replace(/\\./, '');  \n        codes.push(doc.institutionCode + '-' + catalogNumber);\n        output_default = false;\n      }\n      break;\n\n      // MNHN\n    case '1b2af425-9f6f-4b28-a008-af9757317c4c':\n      if (doc.catalogNumber.match(/^ENSIF/)) {\n        var catalogNumber = doc.catalogNumber;\n        catalogNumber = catalogNumber.replace(/ENSIF/, '');  \n        codes.push(doc.institutionCode + ':ENSIF ' + catalogNumber);\n      }\n      break;\n      // MHNH birds\n    case 'ba0c03ab-fa61-4a3c-8db7-35c8c3454168':\n      if (doc.catalogNumber.match(/^MO/)) {\n        var catalogNumber = doc.catalogNumber;\n        catalogNumber = catalogNumber.replace(/MO-/, '');  \n        codes.push(doc.institutionCode + ' ' + catalogNumber);\n      }\n      break;\n\n      // MCZ\n    case '4bfac3ea-8763-4f4b-a71a-76a6f5f243d3':\n      if (doc.catalogNumber.match(/^[R]-/)) {\n        codes.push(doc.institutionCode + ' ' + doc.catalogNumber.replace(/^[R]-/, ''));\n      }\n      break;\n\n      // MVZ\n    case '09c4287e-e6d5-4552-a07f-bff8a00833d8':\n         codes.push(doc.institutionCode + ':Herp:' + doc.catalogNumber);   \n      break;\n\n      // NMV D\n    case '39905320-6c8a-11de-8226-b8a03c50a862':\n      codes.push(doc.institutionCode + doc.catalogNumber.replace(/ /, ''));\n      codes.push('NMV<AUS>:' + doc.institutionCode + doc.catalogNumber.replace(/ /, ''));\n      break;\n\n      // OMNH Osaka Museum of Natural History fish\n    case '849f0a76-f762-11e1-a439-00145eb45e9a':\n      if (doc.collectionCode == 'P') {\n        codes.push(doc.institutionCode + '-' + doc.collectionCode + ' ' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n        output_default = false;\n      }\n      break;\n\n      // OSUC\n      // C.A. Triplehorn Insect Collection, Ohio State University, Columbus, OH (OSUC)\n    case '84ab7b76-f762-11e1-a439-00145eb45e9a':\n        codes.push(doc.catalogNumber);\n      output_default = false;\n      break;\n\n      // TTU\n      // mammals\n    case '854f70cc-55e3-4af2-9417-0f47d6c7902d':\n      // output field numbers as tissue numbers\n      if (doc.fieldNumber) {\n        codes.push('TK' + doc.fieldNumber);\n        codes.push('TK ' + doc.fieldNumber);\n      }\n      break;\n\n      // UAM\n      // mammals\n    case '377be098-626f-4cc2-b4b5-35700050669a':\n      codes.push(doc.institutionCode + ':Mamm:' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n      break;\n\n      // UF (FLMNH)\n      // Ichthyology\n    case 'eccf4b09-f0c8-462d-a48c-41a7ce36815a':\n      codes.push('FLMNH ' + doc.catalogNumber);\n      codes.push('UF' + doc.catalogNumber);\n      break;\n      // Inverts (e.g., moolluscs)\n    case '85b1cfb6-f762-11e1-a439-00145eb45e9a':\n      codes.push('UF ' + doc.catalogNumber.replace(/\\-\\w+$/, ''));\n      break;\n\n      // USNM\n    case '5df38344-b821-49c2-8174-cf0f29f4df0d':\n      codes.push(doc.institutionCode + ' ' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n\n      switch (doc.collectionCode) {\n        case 'Amphibians & Reptiles':\n          codes.push(doc.institutionCode + ':Herp:' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        case 'Birds':\n          codes.push(doc.institutionCode + ':Birds:' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        case 'Fishes':\n          codes.push(doc.institutionCode + ':Fish:' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        case 'Mammals':\n          codes.push(doc.institutionCode + ':MAMM:' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        default:\n          break;\n      }\n      output_default = true;\n      break;\n\n      // UTA\n      // Herpetology\n    case '8d88898d-a2c4-4616-a1fe-431b9c06b671':\n      switch (doc.collectionCode) {\n        case 'UTA-A':\n          codes.push(doc.institutionCode + ' A' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          codes.push(doc.institutionCode + ' A-' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        case 'UTA-R':\n          codes.push(doc.institutionCode + ' R' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          codes.push(doc.institutionCode + ' R-' + doc.catalogNumber.replace(/\\.\\d+/, ''));\n          break;\n        default:\n          break;\n      }\n      break;\n\n      // UWBM \n      // birds\n    case '830fd460-f762-11e1-a439-00145eb45e9a':\n      break;\n\n      // UZA\n    case '96c25708-f762-11e1-a439-00145eb45e9a':\n      codes.push(doc.catalogNumber);\n      output_default = false;\n      break;\n\n      // WAM\n    case '7c93d290-6c8b-11de-8226-b8a03c50a862':\n      codes.push(doc.institutionCode + doc.catalogNumber);\n      codes.push(doc.institutionCode + ' ' + doc.catalogNumber.replace(/^R/, ''));\n\n      if (doc.collectionCode == \"REPT\") {\n        // Number-only codes need R prefix\n        if (doc.catalogNumber.match(/^\\d+/)) {\n          codes.push(doc.institutionCode + 'R' + doc.catalogNumber);\n          codes.push(doc.institutionCode + ' R' + doc.catalogNumber);\n        }\n      }\n      break;\n\n      // YPM Inverts\n    case '854e35e6-f762-11e1-a439-00145eb45e9a':\n      // YPM entomology\n    case '96404cc2-f762-11e1-a439-00145eb45e9a':\n      // YPM fish\n    case '96419bea-f762-11e1-a439-00145eb45e9a':\n      // YPM Herps\n    case '861d3d64-f762-11e1-a439-00145eb45e9a':\n      // YPM birds\n    case '854cf79e-f762-11e1-a439-00145eb45e9a':\n      // YPM mammals\n    case '854f602e-f762-11e1-a439-00145eb45e9a':\n      var parts = doc.catalogNumber.match(/(YPM)\\s+([A-Z]+)\\s+(0+)?(\\d+)/);\n      if (parts) {\n        var collection = parts[2];\n        var catalogNumber = parts[4];\n\n        // YPM \\d+\n        codes.push(doc.institutionCode + ' ' + catalogNumber);\n        // YPM as is\n        codes.push(doc.catalogNumber);\n        // DwC triple\n        collection = collection.substr(0, Math.min(3, collection.length));\n        codes.push(doc.institutionCode + ':' + collection + ':' + catalogNumber);\n      }\n      output_default = false;\n      break;\n\n      // ZMUC\n    case 'cb643105-2e6b-403d-a23b-2c8128d1f97c':\n      codes.push(doc.catalogNumber.replace(/-/, ' '));\n      output_default = false;\n      break;\n\n      // ZMUC birds\n    case 'af3bce08-0599-45a6-9bfc-08188bcd868e':\n      var catalogNumber = doc.catalogNumber.replace(/AVES-0?/, '');\n      codes.push(doc.institutionCode + ' ' + catalogNumber);\n      // see doi:10.1007/s10336-006-0082-4\n      if (catalogNumber.length == 5) {\n        codes.push(doc.institutionCode + ' ' + catalogNumber.substr(0, 2) + '.' + catalogNumber.substr(2, 3));\n      }\n      output_default = false;\n      break;\n\n      // Zoologische Staatssammlung Muenchen\n      // International Barcode of Life (iBOL) - Barcode of Life Project Specimen Data\n    case 'f29ab192-5964-40ae-a397-fa48ffdf0661':\n      codes.push(doc.catalogNumber);\n      output_default = false;\n      break;\n\n    default:\n      output_default = true; // for now while we debug, make true when all done\n      break;\n  }\n\n\n  // add any other useful records\n  if (doc.otherCatalogNumbers) {\n    codes.push(doc.otherCatalogNumbers);\n  }\n\n  if (doc.recordNumber) {\n    codes.push(doc.recordNumber);\n  }\n\n  if (doc.occurrenceID) {\n    codes.push(doc.occurrenceID);\n  }\n\n  if (output_default) {\n    if (doc.institutionCode && doc.catalogNumber) {\n      codes.push(doc.institutionCode + ' ' + doc.catalogNumber);\n    }\n\n    // For when we have complete specimen code as catalogue number\n    if (doc.catalogNumber) {\n      codes.push(doc.catalogNumber);\n    }\n  }\n\n  // Make unique\n  var unique = [];\n  for (var i = 0; i < codes.length; i++) {\n    if (unique.indexOf(codes[i]) == -1) {\n      unique.push(codes[i]);\n    }\n  }\n\n  return unique;\n}\n\n\n\n\nfunction message(doc) {\n  var triples = [];\n\n  var cluster_id = doc._id; // DataFeedItem\n\n  var locality_id = '';\n  var event_id = '';\n  var identification_id = '';\n  \n  // item is the occurrence\n  var item_id = 'http://www.gbif.org/occurrence/' + doc.message.key;\n  var occurrence_id = item_id;\n  \n  triples.push(triple(cluster_id,\n    'http://schema.org/item',\n    item_id));\n\n  var name = [];\n  if (doc.message.institutionCode) {\n    name.push(doc.message.institutionCode);\n  }\n  if (doc.message.collectionCode) {\n    name.push(doc.message.collectionCode);\n  }\n  if (doc.message.catalogNumber) {\n    name.push(doc.message.catalogNumber);\n  }\n  // Cases where there is not a Darwin Core triple\n  if (name.length == 0) {\n    if (doc.message.occurrenceID) {\n      name.push(doc.message.occurrenceID);\n    }\n  }\n\n  triples.push(triple(item_id,\n    'http://schema.org/name',\n    String(name.join(' ')) ));\n    \n  triples.push(triple(item_id,\n    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n    'http://rs.tdwg.org/dwc/terms/Occurrence'));\n    \n  triples.push(triple(item_id,\n    'http://purl.org/dc/terms/identifier',\n    item_id));\n  \n  // Data provider may have an occurrence ID \n  var occurrenceID = '';\n  if (doc.message.occurrenceID) {\n\n    if (occurrenceID == '') {\n      // NHM\n      if (doc.message.datasetKey == '7e380070-f762-11e1-a439-00145eb45e9a') {\n        occurrenceID = 'http://data.nhm.ac.uk/object/' + doc.message.occurrenceID;\n        \n        triples.push(triple(occurrence_id,\n          'http://schema.org/sameAs',\n          occurrenceID));        \n\n        // store identifier in original form \n        triples.push(triple(item_id,\n          'http://purl.org/dc/terms/identifier',\n          doc.message.occurrenceID));\n       }\n    }\n\n    if (occurrenceID == '') {\n      // URL\n      if (doc.message.occurrenceID.match(/^http[s]?:/)) {\n        occurrenceID = doc.message.occurrenceID;\n        \n        triples.push(triple(occurrence_id,\n          'http://schema.org/sameAs',\n          occurrenceID));                \n      }\n    }\n\n    if (occurrenceID == '') {\n      // UUID\n      // http://stackoverflow.com/a/13653180/9684\n      if (doc.message.occurrenceID.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\n        occurrenceID = 'urn:uuid:' + doc.message.occurrenceID.toLowerCase();\n\n        // store identifier in original form \n        triples.push(triple(occurrence_id,\n          'http://purl.org/dc/terms/identifier',\n          doc.message.occurrenceID.toLowerCase()));\n      }\n    }\n    \n    if (occurrenceID != '') {\n      triples.push(triple(occurrence_id,\n        'http://purl.org/dc/terms/identifier',\n        occurrenceID));\n    }\n    \n  }\n\n  // for searchability we keep track of/create alternative specimen codes \n  var codes = [];\n\n  // fields\n  for (var i in doc.message) {\n    if (doc.message[i] != null) {\n      switch (i) {\n\n        // record-level\n        \n          // license\n        case 'license':\n          triples.push(triple(cluster_id,\n            'http://schema.org/license',\n            doc.message[i]));\n          break;\n\n          // created\n        case 'lastParsed':\n          triples.push(triple(cluster_id,\n            'http://schema.org/dateCreated',\n            doc.message[i]));\n          break;\n        \n        case 'datasetKey':\n          triples.push(triple(item_id,\n            'http://rs.tdwg.org/dwc/terms/datasetID',\n            'http://www.gbif.org/dataset/' + doc.message[i]));\n          break;\n\n        case 'basisOfRecord':\n          triples.push(triple(item_id,\n            'http://rs.tdwg.org/dwc/terms/basisOfRecord',\n            doc.message[i]));\n          break;\n\n          // Occurrence (usually a specimen)\n          // Darwin Core occurrence---------------------------------------------------------\n        case 'catalogNumber':\n        case 'collectionCode':\n        case 'collectionID':\n        case 'institutionCode':\n        case 'institutionID':\n        case 'recordedBy':\n        case 'individualCount':\n        case 'organismQuantity':\n        case 'sex':\n        case 'lifeStage':\n        case 'reproductiveCondition':\n        case 'behavior':\n        case 'establishmentMeans':\n        case 'occurrenceStatus':\n        case 'preparations':\n        case 'disposition':\n        case 'otherCatalogNumbers':\n        case 'recordNumber':\n        case 'occurrenceRemarks':\n\n          triples.push(triple(occurrence_id,\n            'http://rs.tdwg.org/dwc/terms/' + i,\n            String(doc.message[i])));\n          break;\n\n          // needs more thought\n        /*\n        case 'type':\n          // These are supposed to be from the Dublin Core dcmitype vocabulary,\n          // and apply at record level\n          switch (doc.message[i]) {\n            case 'PhysicalObject':\n              triples.push(triple(occurrence_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://purl.org/dc/dcmitype/' + doc.message[i]));\n              break;\n\n            default:\n              break;\n          }\n          break;\n          */\n\n\n\n\n          // Darwin Core locality-----------------------------------------------------------\n        case 'continent':\n        case 'coordinateUncertaintyInM':\n        case 'coordinatePrecision':\n        case 'country':\n        case 'county':\n        case 'countryCode':\n        case 'decimalLatitude':\n        case 'decimalLongitude':\n        case 'depth':\n        case 'depthAccuracy':\n        case 'elevation':\n        case 'footprintWKT':\n        case 'footprintSRS':\n        case 'footprintSpatialFit':\n        case 'geodeticDatum':\n        case 'georeferencedBy':\n        case 'georeferencedDate':\n        case 'georeferenceSources':\n        case 'georeferenceProtocol':\n        case 'georeferenceVerification':\n        case 'georeferenceRemarks':\n        case 'higherGeography':\n        case 'higherGeographyID':\n        case 'island':\n        case 'islandGroup':\n        case 'locality':\n        case 'locationAccordingTo':\n        case 'locationID':\n        case 'locationRemarks':\n        case 'maximumElevationInMeters':\n        case 'minimumElevationInMeters':\n        case 'maximumDepthInMeters':\n        case 'minimumDepthInMeters':\n        case 'minimumDistanceAboveSurf':\n        case 'maximumDistanceAboveSurf':\n        case 'municipality':\n        case 'pointRadiusSpatialFit':\n        case 'stateProvince':\n        case 'verbatimCoordinates':\n        case 'verbatimLatitude':\n        case 'verbatimLongitude':\n        case 'verbatimCoordinateSystem':\n        case 'verbatimSRS':\n        case 'verbatimDepth':\n        case 'verbatimElevation':\n        case 'verbatimLocality':\n        case 'waterBody':\n\n          // b-node (maybe with global identifer)\n          if (locality_id == '') {\n            var geohash = '';\n\n            locality_id = item_id + '#locality';\n            if (doc.message.decimalLatitude && doc.message.decimalLongitude) {\n              geohash = encodeGeoHash(doc.message.decimalLatitude, doc.message.decimalLongitude);\n              locality_id = 'http://geohash.org/' + geohash;\n            }\n\n            if (doc.message.locationID) {\n              if (doc.message.locationID.match(/^(http[s]?|urn)/)) {\n                locality_id = doc.message.locationID;\n              }\n            }\n\n            // types\n            triples.push(triple(locality_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://purl.org/dc/terms/Location'));\n\n            triples.push(triple(locality_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://schema.org/Place'));\n\n            // link to cluster\n            triples.push(triple(item_id,\n              'http://rs.tdwg.org/dwc/terms/locationID',\n              locality_id));\n\n\n            // Store the geohash\n            if (geohash != '') {\n              triples.push(triple(locality_id,\n                'http://www.w3.org/ns/locn#geometry',\n                'http://geohash.org/' + geohash));\n            }\n\n            if (doc.message.decimalLatitude && doc.message.decimalLongitude) {\n\n              // map\n              var mapUrl = 'http://www.openstreetmap.org/' +\n                '?mlat=' + doc.message.decimalLatitude +\n                '&mlon=' + doc.message.decimalLongitude +\n                '&zoom=8';\n\n              triples.push(triple(locality_id,\n                'http://schema.org/hasMap',\n                mapUrl));\n\n\n              // geo\n              var geo_id = locality_id + '/geo';\n\n              triples.push(triple(locality_id,\n                'http://schema.org/geo',\n                geo_id));\n\n              triples.push(triple(geo_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/GeoCoordinates'));\n              triples.push(triple(geo_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/GeoCoordinates'));\n              triples.push(triple(geo_id,\n                'http://schema.org/latitude',\n                String(doc.message.decimalLatitude)));\n              triples.push(triple(geo_id,\n                'http://schema.org/longitude',\n                String(doc.message.decimalLongitude)));\n\n            }\n\n          }\n          triples.push(triple(locality_id,\n            'http://rs.tdwg.org/dwc/terms/' + i,\n            String(doc.message[i])));\n          break;\n\n          // Darwin Core Event----------------------------------------------------------\n        case 'fieldNumber':\n        case 'eventDate':\n        case 'year':\n        case 'month':\n        case 'day':\n        case 'verbatimEventDate':\n        case 'fieldNotes':\n        case 'eventRemarks':\n          // b-node\n          // any examples of identifiers?\n          if (event_id == '') {\n            // b-node\n            event_id = item_id + '#event';\n\n            if (doc.message.eventID) {\n              if (doc.message.eventID.match(/^(http[s]?|urn)/)) {\n                event_id = doc.message.eventID;\n              }\n            }\n\n            triples.push(triple(event_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://rs.tdwg.org/dwc/terms/Event'));\n\n            // link to cluster\n            triples.push(triple(item_id,\n              'http://rs.tdwg.org/dwc/terms/eventID',\n              event_id));\n\n          }\n          triples.push(triple(event_id,\n            'http://rs.tdwg.org/dwc/terms/' + i,\n            String(doc.message[i])));\n          break;\n\n          // Darwin Core taxon (to do)\n\n\n          // Darwin Core Identification----------------------------------------------------------\n        case \"kingdom\":\n        case \"phylum\":\n        case \"order\":\n        case \"class\":\n        case \"family\":\n        case \"genus\":\n        case \"species\":\n        case 'scientificName': // convenience\n        case 'typeStatus':\n        case 'identificationQualifier':\n        case 'typeStatus':\n        case 'identifiedBy':\n        case 'dateIdentified':\n        case 'identificationReferences':\n        case 'identificationVerificationStatus':\n        case 'identificationRemarks':\n          // b-node\n          // any examples of identifiers?\n          if (identification_id == '') {\n            // b-node\n            identification_id = item_id + '#identification';\n\n\n            triples.push(triple(identification_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://rs.tdwg.org/dwc/terms/Identification'));\n\n            // link to taxon\n            if (doc.message.taxonKey) {\n              triples.push(triple(identification_id,\n                'http://rs.tdwg.org/dwc/terms/taxonID',\n                'http://www.gbif.org/species/' + doc.message.taxonKey));\n\n            }\n\n            // link to cluster\n            triples.push(triple(item_id,\n              'http://rs.tdwg.org/dwc/terms/identificationID',\n              identification_id));\n\n\n\n          }\n          triples.push(triple(identification_id,\n            'http://rs.tdwg.org/dwc/terms/' + i,\n            String(doc.message[i])));\n          break;\n\n          // references\n        case 'associatedReferences':\n          triples.push(triple(item_id,\n            'http://rs.tdwg.org/dwc/terms/associatedReferences',\n            String(doc.message[i])));\n          break;\n\n          // associated taxa (e.g., hosts)\n        case 'associatedTaxa':\n          triples.push(triple(item_id,\n            'http://rs.tdwg.org/dwc/terms/associatedTaxa',\n            String(doc.message[i])));\n          break;\n\n          // sequences\n        case 'associatedSequences':\n          var genbank = doc.message[i];\n          genbank = genbank.replace(/Genbank:/i, '');\n          genbank = genbank.replace(/\\s+/, '');\n          genbank = genbank.replace(/http:\\/\\/www.ncbi.nlm.nih.gov\\/nuccore/, '');\n          genbank = genbank.replace(/\\s*;\\s*/, '|');\n\n          if (genbank != '') {\n            var sequences = genbank.split('|');\n            for (var j in sequences) {\n              triples.push(triple(item_id,\n                'http://rs.tdwg.org/dwc/terms/associatedSequences',\n                'http://identifiers.org/insdc/' + sequences[j]));\n            }\n          }\n          break;\n\n\n          // media\n        case 'media':\n          for (var j in doc.message[i]) {\n            if (doc.message[i][j].type == 'StillImage') {\n              var media_id = doc.message[i][j].identifier;\n\n              // link to data\n              triples.push(triple(media_id,\n                'http://schema.org/about',\n                item_id));\n\n\n              triples.push(triple(media_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/ImageObject'));\n\n              for (var k in doc.message[i][j]) {\n                switch (k) {\n                  case 'format':\n                    triples.push(triple(media_id,\n                      'http://schema.org/fileFormat',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'title':\n                    triples.push(triple(media_id,\n                      'http://schema.org/caption',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'description':\n                    triples.push(triple(media_id,\n                      'http://schema.org/caption',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'references':\n                    triples.push(triple(media_id,\n                      'http://schema.org/about',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'identifier':\n                    triples.push(triple(media_id,\n                      'http://purl.org/dc/terms/identifier',\n                      doc.message[i][j][k]));\n                    triples.push(triple(media_id,\n                      'http://schema.org/contentUrl',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'creator':\n                    triples.push(triple(media_id,\n                      'http://schema.org/creator',\n                      doc.message[i][j][k]));\n                    break;\n\n                  case 'license':\n                    triples.push(triple(media_id,\n                      'http://schema.org/license',\n                      doc.message[i][j][k]));\n                    break;\n\n\n                  default:\n                    break;\n                }\n              }\n            }\n          }\n          break;\n\n\n\n\n          // identifiers\n        case 'identifiers':\n          for (var j in doc.message[i]) {\n            switch (doc.message[i][j].type) {\n\n              case 'DOI':\n                var doi = doc.message[i][j].identifier;\n                doi = doi.replace(/DOI:\\s*/i, '');\n\n                triples.push(triple(item_id,\n                  'http://purl.org/dc/terms/identifier',\n                  'http://identifiers.org/doi/' + doi));\n                break;\n\n              case 'UUID':\n                var uuid = doc.message[i][j].identifier;\n\n                // Fomrat nicely (Plazi doesn't)\n                if (uuid.match(/-/)) {} else {\n                  // bfee38ac-d1ef-47d5-b4a3-ffa07cc53f18\n                  uuid = uuid.substring(0, 8) + '-' + uuid.substring(8, 12) + '-' + uuid.substring(12, 16) + '-' + uuid.substring(16, 22) + '-' + uuid.substring(22);\n                }\n\n                uuid = 'urn:uuid:' + uuid.toLowerCase();\n\n                triples.push(triple(item_id,\n                  'http://purl.org/dc/terms/identifier',\n                  uuid));\n\n                break;\n\n              default:\n                break;\n            }\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  // post processing\n\n  // alternative specimen codes\n  var codes = specimen_codes(doc.message);\n  for (var i in codes) {\n    triples.push(triple(occurrence_id,\n      'http://schema.org/alternateName',\n      String(codes[i])));\n  }\n\n\n\n  // defaults\n  triples.push(triple(cluster_id,\n    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n    'http://schema.org/DataFeedItem'));\n\n  output(doc, triples);\n}\n\nfunction(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'gbif-occurrence') {\n      message(doc);\n    }\n  }\n}"
       },
       "modified": {
           "map": "function(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'gbif-occurrence') {\n     if (doc.message) {\n      emit(doc['message-modified'], doc._id);\n     }\n    }\n  }\n}"
       }
   }
}