{
   "_id": "_design/crossref",
   "_rev": "15-c6d5db329999edaab685e97dd5455224",
   "language": "javascript",
   "lists": {
       "n-triples": "function(head,req) { var headers = ''; var row; start({ 'headers': { 'Content-Type': 'text/plain' } }); while(row = getRow()) { send(row.value + '\\n'); } }"
   },
   "views": {
       "nt": {
           "map": "/*\n\nShared code\n\n\n*/\n//----------------------------------------------------------------------------------------\n// Store a triple with optional language code\nfunction triple(subject, predicate, object, language) {\n  var triple = [];\n  triple[0] = subject;\n  triple[1] = predicate;\n  triple[2] = object;\n\n  if (typeof language === 'undefined') {} else {\n    triple[3] = language;\n  }\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Store a quad (not used at present)\nfunction quad(subject, predicate, object, context) {\n  var triple = [];\n  triple[0] = $subject;\n  triple[1] = $predicate;\n  triple[2] = $object;\n  triple[3] = $context;\n\n  return triple;\n}\n\n//----------------------------------------------------------------------------------------\n// Enclose triple in suitable wrapping for HTML display or triplet output\nfunction wrap(s, html) {\n  if (s.match(/^(http|urn|_:)/)) {\n    if (html) {\n      s = '&lt;' + s + '&gt;';\n    } else {\n      s = '<' + s + '>';\n    }\n  } else {\n    s = '\"' + s.replace(/\"/g, '\\\\\"') + '\"';\n  }\n  return s;\n}\n\n//----------------------------------------------------------------------------------------\n// https://css-tricks.com/snippets/javascript/htmlentities-for-javascript/\nfunction htmlEntities(str) {\n  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n//----------------------------------------------------------------------------------------\nfunction output(doc, triples) {\n    // CouchDB\n    for (var i in triples) {\n      var s = 0;\n      var p = 1;\n      var o = 2;\n      emit(doc._id, wrap(triples[i][s], false) + ' ' + wrap(triples[i][p], false) + ' ' + wrap(triples[i][o], false) + ' .');\n    }\n}\n\nfunction message(doc) {\n  var triples = [];\n\n  var cluster_id = '';\n\n  var identifiers = [];\n\n  if (doc.message) {\n\n    // get identifier\n    for (var i in doc.message) {\n      switch (i) {\n\n        case 'DOI':\n          cluster_id = 'http://identifiers.org/doi/' + doc.message[i];\n         break;\n\n        // NCBI ids\n        case 'pmid':\n          if ((cluster_id == '') && !doc.message.DOI) {\n            cluster_id = 'http://identifiers.org/pubmed/' + doc.message[i];\n          }\n          break;\n\n        case 'URL':\n          if ((cluster_id == '') && !doc.message.DOI) {\n            cluster_id = doc.message[i];\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    // output identifiers\n    for (var i in doc.message) {\n      switch (i) {\n\n        case 'DOI':\n           triples.push(triple(cluster_id,\n            'http://purl.org/dc/terms/identifier',\n            'http://identifiers.org/doi/' + doc.message[i]));\n          break;\n\n        // NCBI ids\n        case 'pmid':\n           triples.push(triple(cluster_id,\n            'http://purl.org/dc/terms/identifier',\n            'http://identifiers.org/pubmed/' + doc.message[i]));\n          break;\n\n        case 'pmc':\n           triples.push(triple(cluster_id,\n            'http://purl.org/dc/terms/identifier',\n            'http://identifiers.org/pmc/' + doc.message[i]));\n          break;\n\n        case 'URL':\n          triples.push(triple(cluster_id,\n            'http://purl.org/dc/terms/identifier',\n            doc.message[i]));\n          break;\n\n\n          // any alternative ids\n        case 'alternative-id':\n          for (var j in doc.message[i]) {\n            triples.push(triple(cluster_id,\n              'http://purl.org/dc/terms/identifier',\n              doc.message[i][j]));\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n\n\n\n    // fields\n    for (var i in doc.message) {\n      switch (i) {\n\n        case 'type':\n          switch (doc.message[i]) {\n            case 'article-journal':\n            case 'journal-article':\n              triples.push(triple(cluster_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/ScholarlyArticle'));\n              break;\n            default:\n              break;\n          }\n          break;\n\n          // title can be string or array\n        case 'title':\n          if (Array.isArray(doc.message[i])) {\n            for (var j in doc.message[i]) {\n              triples.push(triple(cluster_id,\n                'http://schema.org/name',\n                doc.message[i][j]));\n            }\n          } else {\n            triples.push(triple(cluster_id,\n              'http://schema.org/name',\n              doc.message[i]));\n          }\n          break;\n\n\n          // article metadata\n        case 'issue':\n          triples.push(triple(cluster_id,\n            'http://schema.org/issueNumber',\n            doc.message[i]));\n          break;\n\n        case 'pages':\n          triples.push(triple(cluster_id,\n            'http://schema.org/pagination',\n            doc.message[i]));\n          break;\n\n        case 'volume':\n          triples.push(triple(cluster_id,\n            'http://schema.org/volumeNumber',\n            doc.message[i]));\n          break;\n\n        case 'page':\n          var parts = doc.message[i].match(/^(.*)\\-(.*)$/);\n          if (parts) {\n            triples.push(triple(cluster_id,\n              'http://schema.org/pageStart',\n              parts[1]));\n            triples.push(triple(cluster_id,\n              'http://schema.org/pageEnd',\n              parts[2]));\n          } else {\n            triples.push(triple(cluster_id,\n              'http://schema.org/pagination',\n              doc.message[i]));\n          }\n          break;\n\n\t  case 'issued':\n\t     var date = '';\n\t     var dateparts = doc.message[i]['date-parts'][0];\n\t     \n\t     switch (dateparts.length) {\n\t        case 1:\n\t           date = dateparts[0];\n\t           break;\n\t        case 2:\n\t           date = dateparts[0] + '-' + (\"00\" + dateparts[1]).slice(-2) + '-00';\n\t           break;\n\t        case 3:\n\t           date = dateparts[0] + '-' + (\"00\" + dateparts[1]).slice(-2) + '-' + (\"00\" + dateparts[2]).slice(-2);\t           \n\t           break;\n\t        default:\n\t        \tbreak;\n\t    }\n\t    triples.push(triple(cluster_id,\n          'http://schema.org/datePublished',\n          date));\n\t    \n\t    break;\n\n\n          // journal\n        case 'ISSN':\n          // one journal, but can have 1-2 ISSNs\n          // pick one for cluster_id\n          var journal_id = 'http://www.worldcat.org/issn/' + doc.message[i][0];\n\n          triples.push(triple(cluster_id,\n            'http://schema.org/isPartOf',\n            journal_id\n          ));\n\n          // type\n          triples.push(triple(journal_id,\n            'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n            'http://schema.org/Periodical'));\n\n          // journal name can be string or array\n          if (Array.isArray(doc.message['container-title'])) {\n            for (var j in doc.message['container-title']) {\n              triples.push(triple(journal_id,\n                'http://schema.org/name',\n                doc.message['container-title'][j]));\n            }\n          } else {\n            triples.push(triple(journal_id,\n              'http://schema.org/name',\n              doc.message['container-title']));\n          }\n\n          // multi?\n          if (doc.message['multi']) {\n            if (doc.message['multi']._key['container-title']) {\n              for (var j in doc.message['multi']._key['container-title']) {\n                triples.push(triple(journal_id,\n                  'http://schema.org/name',\n                  doc.message['multi']._key['container-title'][j], j));\n              }\n            }\n          }\n\n\n          // ISSNs\n          for (var j in doc.message[i]) {\n\n            // issn\n            triples.push(triple(journal_id,\n              'http://schema.org/issn',\n              doc.message[i][j]));\n\n            // identifiers\n            triples.push(triple(journal_id,\n              'http://purl.org/dc/terms/identifier',\n              'http://www.worldcat.org/issn/' + doc.message[i][j]));\n\n\n\n          }\n          break;\n\n          // authors (may include ORCIDs)\n          // if no ORCID then we have a bnode, so create an identifier to make this addressable\n        case 'author':\n          var n = doc.message[i].length;\n          for (var j = 0; j < n; j++) {\n            var author_id = '';\n\n            // create identifier\n            if (doc.message[i][j].ORCID) {\n              author_id = doc.message[i][j].ORCID;\n            } else {\n              // #hash identifier \n              author_id = cluster_id + '#author_' + (j + 1);\n            }\n\n            // type, need to handle organisations as authors\n            triples.push(triple(author_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://schema.org/Person'));\n\n            triples.push(triple(cluster_id,\n              'http://schema.org/author',\n              author_id));\n\n            // name\n            var name = '';\n            if (doc.message[i][j].given) {\n              triples.push(triple(author_id,\n                'http://schema.org/givenName', // ?\n                doc.message[i][j].given));\n\n              name += doc.message[i][j].given;\n            }\n            if (doc.message[i][j].family) {\n              triples.push(triple(author_id,\n                'http://schema.org/familyName', // ?\n                doc.message[i][j].family));\n\n              name += ' ' + doc.message[i][j].family;\n            }\n\n            if (name != '') {\n              triples.push(triple(author_id,\n                'http://schema.org/name', // ?\n                name));\n            }\n\n            // affiliation\n            // make into a role\n            if (doc.message[i][j].affiliation) {\n              var affiliation_count = 1;\n              for (var k in doc.message[i][j].affiliation) {\n                if (doc.message[i][j].affiliation[k].name) {\n                  var affiliation_id = author_id + '/affiliation_' + affiliation_count;\n                  var affiliation_role_id = author_id + '/affiliation_' + affiliation_count + '/role';\n\n                  // author to role\n                  triples.push(triple(author_id,\n                    'http://schema.org/affiliation',\n                    affiliation_role_id));\n\n                  triples.push(triple(affiliation_role_id,\n                    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                    'http://schema.org/OrganizationRole'));\n\n                  // role to affiliation\n                  triples.push(triple(affiliation_role_id,\n                    'http://schema.org/affiliation',\n                    affiliation_id));\n\n                  triples.push(triple(affiliation_id,\n                    'http://schema.org/name',\n                    doc.message[i][j].affiliation[k].name));\n\n                  triples.push(triple(affiliation_id,\n                    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                    'http://schema.org/Organisation'));\n\n                }\n                affiliation_count++;\n              }\n            }\n\n\n          }\n          break;\n\n          // publisher\n          // should this be linked to journal rather than article?\n        case 'publisher':\n          triples.push(triple(cluster_id,\n            'http://schema.org/publisher',\n            doc.message[i]));\n          break;\n\n          // funding\n        case 'funder':\n          var n = doc.message[i].length;\n          for (var j = 0; j < n; j++) {\n            var funder_id = '';\n\n            // create identifier for funder\n            if (doc.message[i][j].DOI) {\n              funder_id = 'http://identifiers.org/doi/' + doc.message[i][j].DOI;\n            } else {\n              // #hash identifier \n              funder_id = cluster_id + '#funder_' + (j + 1);\n            }\n\n            // create funder \n            triples.push(triple(funder_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://schema.org/Organisation'));\n\n            triples.push(triple(funder_id,\n              'http://schema.org/name',\n              doc.message[i][j].name));\n\n            // role\n            var m = doc.message[i][j].award.length;\n\n            if (m == 0) {\n              // funder but award not known\n              var award_id = funder_id + '/award';\n\n              triples.push(triple(award_id,\n                'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                'http://schema.org/Role'));\n\n              // link to funder \n              triples.push(triple(award_id,\n                'http://schema.org/funder',\n                funder_id));\n\n              // link role to work         \n              triples.push(triple(cluster_id,\n                'http://schema.org/funder',\n                award_id));\n            } else {\n              // we have one or more awards\n              for (var a = 0; a < m; a++) {\n                var award_id = funder_id + '/award_' + (a + 1);\n\n                triples.push(triple(award_id,\n                  'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n                  'http://schema.org/Role'));\n\n                triples.push(triple(award_id,\n                  'http://schema.org/roleName',\n                  doc.message[i][j].award[a]\n                ));\n\n                // link to funder \n                triples.push(triple(award_id,\n                  'http://schema.org/funder',\n                  funder_id));\n\n                // link role to work         \n                triples.push(triple(cluster_id,\n                  'http://schema.org/funder',\n                  award_id));\n              }\n            }\n          }\n          break;\n\n          // license\n        case 'license':\n          for (var j in doc.message[i]) {\n            if (doc.message[i][j].URL) {\n              triples.push(triple(cluster_id,\n                'http://schema.org/license',\n                doc.message[i][j].URL));\n            }\n          }\n          break;\n\n          // links to representions such as PDFs, XML, HTML, etc.\n          // may be links to text mining sources\n        case 'link':\n          var n = doc.message[i].length;\n          for (var j = 0; j < n; j++) {\n            var link_id = cluster_id + '#link_' + (j + 1);\n\n            // type\n            triples.push(triple(link_id,\n              'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n              'http://schema.org/CreativeWork'));\n\n            if (doc.message[i][j].URL) {\n              triples.push(triple(link_id,\n                'http://schema.org/url',\n                doc.message[i][j].URL));\n\n              if (doc.message[i][j]['content-type']) {\n                triples.push(triple(link_id,\n                  'http://schema.org/fileFormat',\n                  doc.message[i][j]['content-type']));\n              }\n\n              // link to work\n              triples.push(triple(cluster_id,\n                'http://schema.org/workExample',\n                link_id));\n            }\n          }\n          break;\n\n          // tags\n        case 'subject':\n          for (var j in doc.message[i]) {\n            triples.push(triple(cluster_id,\n              'http://schema.org/about',\n              doc.message[i][j]));\n          }\n          break;\n\n          // abstract\n        case 'abstract':\n          triples.push(triple(cluster_id,\n            'http://schema.org/description',\n            doc.message[i]));\n          break;\n\n          // work level multi\n          // do this because there may be fields that only exist in multi keys\n        case 'multi':\n          for (var j in doc.message['multi']._key) {\n            for (var k in doc.message['multi']._key[j]) {\n              switch (j) {\n                case 'title':\n                  triples.push(triple(cluster_id,\n                    'http://schema.org/name',\n                    doc.message['multi']._key[j][k], k));\n                  break;\n                case 'abstract':\n                  triples.push(triple(cluster_id,\n                    'http://schema.org/description',\n                    doc.message['multi']._key[j][k], k));\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n          break;\n\n\n        default:\n          break;\n      }\n    }\n  }\n\n  // defaults\n  triples.push(triple(cluster_id,\n    'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',\n    'http://schema.org/CreativeWork'));\n\n  output(doc, triples);\n\n}\n\nfunction(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'application/vnd.crossref-api-message+json') {\n      message(doc);\n    }\n  }\n}"
       },
       "modified": {
           "map": "function(doc) {\n  if (doc['message-format']) {\n    if (doc['message-format'] == 'application/vnd.crossref-api-message+json') {\n     if (doc.message) {\n      emit(doc['message-modified'], doc._id);\n     }\n    }\n  }\n}"
       }
   }
}